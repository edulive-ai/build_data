import fitz  # PyMuPDF
import os
from pathlib import Path

def pdf_to_png_high_quality(pdf_file, output_dir=None):
    """
    Convert PDF to high quality PNG images (300 DPI)
    
    Args:
        pdf_file (str): Path to PDF file
        output_dir (str): Output directory (default: same as PDF file)
    """
    
    # Ki·ªÉm tra file PDF c√≥ t·ªìn t·∫°i kh√¥ng
    if not os.path.exists(pdf_file):
        print(f"Error: File '{pdf_file}' kh√¥ng t·ªìn t·∫°i!")
        return
    
    # T·∫°o th∆∞ m·ª•c output n·∫øu kh√¥ng ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh
    if output_dir is None:
        output_dir = os.path.dirname(pdf_file)
        if not output_dir:
            output_dir = "."
    
    # T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a t·ªìn t·∫°i
    os.makedirs(output_dir, exist_ok=True)
    
    # L·∫•y t√™n file kh√¥ng c√≥ extension ƒë·ªÉ ƒë·∫∑t t√™n ·∫£nh
    pdf_name = Path(pdf_file).stem
    
    try:
        # M·ªü file PDF
        doc = fitz.open(pdf_file)
        
        # T√≠nh to√°n zoom factor cho 300 DPI
        # M·∫∑c ƒë·ªãnh PDF l√† 72 DPI, ƒë·ªÉ c√≥ 300 DPI c·∫ßn zoom = 300/72 ‚âà 4.17
        zoom_factor = 300 / 72
        mat = fitz.Matrix(zoom_factor, zoom_factor)
        
        # L∆∞u s·ªë trang tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu convert
        total_pages = len(doc)
        print(f"B·∫Øt ƒë·∫ßu convert {total_pages} trang t·ª´ '{pdf_file}'...")
        
        # Convert t·ª´ng trang
        for page_num in range(total_pages):
            page = doc[page_num]
            
            # Render trang th√†nh ·∫£nh v·ªõi ch·∫•t l∆∞·ª£ng cao
            pix = page.get_pixmap(matrix=mat, alpha=False)
            
            # T·∫°o t√™n file ·∫£nh
            image_name = f"{pdf_name}_page_{page_num + 1:03d}.png"
            image_path = os.path.join(output_dir, image_name)
            
            # L∆∞u ·∫£nh
            pix.save(image_path)
            
            print(f"‚úì ƒê√£ l∆∞u: {image_name}")
            
            # Gi·∫£i ph√≥ng b·ªô nh·ªõ
            pix = None
        
        # ƒê√≥ng document
        doc.close()
        
        print(f"\nüéâ Ho√†n th√†nh! ƒê√£ convert {total_pages} trang th√†nh c√¥ng.")
        print(f"üìÅ ·∫¢nh ƒë∆∞·ª£c l∆∞u t·∫°i: {os.path.abspath(output_dir)}")
        
    except Exception as e:
        print(f"‚ùå L·ªói khi convert PDF: {str(e)}")

def main():
    """
    H√†m ch√≠nh - t·ª± ƒë·ªông t√¨m file PDF trong th∆∞ m·ª•c hi·ªán t·∫°i
    """
    
    # T√¨m t·∫•t c·∫£ file PDF trong th∆∞ m·ª•c hi·ªán t·∫°i
    pdf_file = "pdf_books/30_de_thi.pdf"
    
    # T·∫°o th∆∞ m·ª•c con cho ·∫£nh
    output_dir = f"books_to_images/30-de-thi"
    
    # Convert PDF
    pdf_to_png_high_quality(pdf_file, output_dir)

if __name__ == "__main__":
    main()